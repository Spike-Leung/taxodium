#+title: Css Style Format
#+date: 2022-07-28T22:53:48+08:00
#+lastmod: 2022-07-28T22:53:48+08:00
#+draft: true
#+keywords[]:
#+description: ""
#+tags[]:
#+categories[]:

当前，前端开发关于 CSS 的技术有很多：

- CSS Preprocessors (CSS 预处理器):  Sass，Less，Stylus，PostCSS等
- CSS Framework： Bootstrap，Tailwind 等
- CSS in JS: emotion, Styled components
- Atomic css: WidiCSS, UnoCSS..

这篇文章尝试去解释这些技术的作用，以及怎么选择。

* CSS Preprocessor
  #+begin_quote
  A CSS preprocessor is a program that lets you generate CSS from the
  preprocessor's own unique syntax.
  #+end_quote

  CSS 预处理器，有一套自己的语法，帮助你生成需要的 CSS。往往预处理器会
  扩展一些 CSS 不具备的功能，例如，CSS Variable, mixins，nesting
  selector(嵌套选择器), inheritancs selector(选择器继承) 等

  使用 CSS Preprocessor, 需要安装 CSS compiler, 去编译出纯 CSS。

  纵观常见的几个 preprocessor, 做的事情都大同小异，区别在于：

  - 语法不同
  - 支持功能的多寡
  - 依赖的编译平台

  选择上，主要还是看需要什么功能吧，是否便于集成到当前项目中，是否持续维护，社区大小等。

  另外，如果只是变量，简单的计算，其实 CSS 本身也具有一定功能，未必要用 preprocessor。

** [[https://sass-lang.com/][SCSS / SASS (Syntactically Awesome Style Sheets)]]
   - 用 Ruby 写的，可能需要装 Ruby 相关环境，有时这个环境会抽风，碰到
     过几次安装 node-sass 出错的情况

   - 支持函数

   - SCSS 相比于 SASS，写法更接近原生的 CSS，需要写大括号，分号等

** [[https://lesscss.org/][Less (Leaner Stylesheets)]]
   - 使用 JS 编译

   - 不支持函数

   - 比较容易添加到已有项目中
** [[https://stylus-lang.com/][Stylus]]
   - 使用 JS 编译

   - 支持函数

   - 内置了一些处理函数，能够处理繁重的计算
** [[https://postcss.org/][PostCSS]]
   #+begin_quote
   PostCSS is a JavaScript library that transforms CSS into JavaScript.
   #+end_quote

   PostCSS 和上面三者区别比较大，它会先编译出 AST，以 JS 对象形式表示，
   然后可以基于 AST 做很多事情，可以自己写插件去扩展，最后再编译回浏览
   器识别的 CSS。

   因此，PostCSS 除了本身这个库外，还有相关的插件生态圈，可以通过插件
   去实现类似 SCSS 的功能。

   相对于上面三者，扩展性更好，可以实现更多功能。
* CSS Frameworks
  所谓的 CSS 框架，就是别人帮你把一些基础的，通用的样式写好，你直接拿
  来用即可，类比组件库。

  当需要扩展这些框架时，可能还需要用到 preprocessor。

  框架的目的，主要是减少你需要写的 CSS，选择上可以考虑：

  - 预定义的样式是否够用, 是否符合设计的要求
  - 框架体积
  - 可扩展性，是否容易扩展，容易维护
  - 社区活跃度

** [[https://getbootstrap.com/][Bootstrap]]
   #+begin_quote
   Powerful, extensible, and feature-packed frontend toolkit. Build
   and customize with ~Sass~, utilize prebuilt grid system and
   components, and bring projects to life with powerful JavaScript
   plugins.
   #+end_quote
   基于 Sass 打造的一套 CSS 框架，也支持 Less，Bootstrap 本身还提供了一些组件。

** [[https://bulma.io/][Bulma]]
   #+begin_quote
   Bulma is a free, open source framework that provides ready-to-use
   frontend components that you can easily combine to build responsive
   web interfaces.
   #+end_quote
   也是基于 Sass 的框架，更轻量，基于 Flexbox。

   模块化的组织结构，你可以只引用某个模块，例如按钮。

** [[https://tailwindcss.com/][Tailwind CSS]]
   #+begin_quote
   A utility-first CSS framework packed with classes like flex, pt-4,
   text-center and rotate-90 that can be composed to build any design,
   directly in your markup.
   #+end_quote

   它实际上是一个 PostCSS 插件。

   高度可定制化，通过 *tailwind.config.js* 文件进行定制。

   相比于 Bootstrap 和 Bulma，它们都是将 CSS 模板做好提供给你，而
   Thaiwind 更像是提供你制作自己模板的工具。

* CSS-in-JS
  preprocessor 的目的是为了扩展 CSS，增加一些功能特性；

  CSS 框架则是预定义一套规则，不用从零开始构建 UI，便于快速开发；

  那么 CSS-in-JS 是为了解决什么问题呢？
** emotion
** styled components
** CSS modules

* Atomic CSS
** windi CSS / UnoCSS
* Refs
  - [[https://developer.mozilla.org/en-US/docs/Glossary/CSS_preprocessor][CSS preprocessor]] @MDN
  - [[https://www.lambdatest.com/blog/css-preprocessors-sass-vs-less-vs-stylus-with-examples/][CSS Preprocessors – Sass vs LESS vs Stylus (With Examples)]]\\
  - [[https://2021.stateofcss.com/en-US/][State Of CSS 2021]]\\
    了解 2021 年这些 CSS 技术的欢迎度
  - [[https://zerotomastery.io/blog/postcss-vs-sass/][PostCSS vs. SASS: Why You Should Use PostCSS With Vue (+ How)]]
  - [[https://www.browserstack.com/guide/top-css-frameworks][Top 5 CSS Frameworks for Developers and Designers]]
  - [[https://antfu.me/posts/reimagine-atomic-css-zh][重新构想原子化 CSS]]@antfu
  - [[https://css-tricks.com/lets-define-exactly-atomic-css/][Let’s Define Exactly What Atomic CSS is]]
  - [[https://github.com/andreipfeiffer/css-in-js][A thorough analysis of CSS-in-TS]]@andreipfeiffer
