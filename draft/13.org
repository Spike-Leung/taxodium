#+title: Weekly#13
#+INDEX: weekly!#13
#+date: <2024-10-15 Tue>
#+lastmod: <2024-10-15 Tue 23:01>
#+author: Spike Leung
#+email: l-yanlei@hotmail.com
#+description: ""
#+tags: weekly

* News | Article

** [[https://jsomers.net/blog/gettiers][The three-page paper that shook philosophy: Gettiers in software engineering]]

#+begin_quote
假设你站在田野里，看到远处有一头奶牛。

但假设你看到的并不是一头奶牛，而是一个用纸糊的栩栩如生的奶牛模型。

你看到的不是奶牛，而是模型。

一方面，你有一个“田里有一头牛”的合理的真实信念：

1.你相信田里有一头牛；

2.这个信念不是凭空产生的，而是因为你看到了一个长得很像牛的东西；

3.事实上，田里确实有一头牛。

不过，我们还是不愿意说你 /知道/ 田里有一头牛，因为从某种意义上说，你是幸运的：

因为一个奇怪的巧合，那里碰巧真的有一头牛 -- 一头你一无所知的牛。
#+end_quote

#+begin_quote
Gettier 可以用来形容程序员可能遇到的最棘手的情况之一：

*一个问题有多个潜在原因，而你完全有理由相信其中一个原因，即使另一个原因在暗中起作用。*

我认为，为这些棘手的情况设置一个术语，可以让你对它们保持稍微的警觉。

这样，你就能成为一个更好的开发者。
#+end_quote

确实，这周开发的时候我也碰到类似的情况。

我在一个输入框里输入了内容，但发现它在某些情况下没有更新，我就在它触发变化的地方去主动更新它的值。

但是它并不是一直都不会更新，如果输入不同的值的时候，它是会更新的。

于是再好好看了一下它更新的链路，发现它的更新依赖于它的值发生变化。

如果原来输入的是 10，切换出去，再输入 10，因为有个值将它缓存了，前后值一致，就不会更新。

实际上当它被切换出去的时候，它需要重置一下，让缓存的值发生变化才行。

所以问题还是要尽可能地更进一步，找到根本问题，不能停留在表面，不然就会像文章说的，你以为自己知道了，当其实你并不知道。

引申出来就是要多想想，解决问题的时候更近一步。([[https://matklad.github.io/2024/09/06/fix-one-level-deeper.html][Try to Fix It One Level Deeper]])

** [[https://www.greptile.com/blog/how-we-engineer][Splitting engineering teams into defense and offense]]

#+begin_export html
<img src="https://www.greptile.com/5-min.png" alt="Productivity chart">
#+end_export

#+begin_quote
当你让手工艺者不再分心时，就会发生令人惊叹的事情。他们可以花更多的时间在流程上，并在大脑的 "客户端 "保留大量的背景信息。

重要的是，只需 1-2 次短暂中断，就能大幅减少工程师一天的工作量。

由此可见，将干扰隔离给少数人，比分散干扰以 "保持每个人的工作效率 "要有用得多。

如果你在支持上花费了一定的时间，那么在支持上花费更多的时间也不会对你的工作效率产生太大的影响。
#+end_quote

要想高效地做一些事情，需要给自己留足够长的高质量时间。

** [[https://taylor.town/history-of-microwave-ovens][A History of Microwave Ovens]]

微波炉的发展史，感兴趣可以看看。

** [[https://cupofsquid.com/post/not-real/][Let Google Decide]]

作者搬家到了一个地方，这个地方没有在谷歌上被记录，所以谷歌不承认存在这个地方。 这导致作者收寄件都很麻烦。

这表明我们的生活，可能很大程度上都被一些大公司主宰着。

还有的数据，很多都需要云同步，存储在服务商的服务器上，如果哪天他们倒闭了，属于个人的数据可能就丢失了。

我还是更喜欢本地优先的存储，不想数据太多地存储在第三方，要掌握在自己的手上。

就像博客，能够拥有自己的空间，想怎么折腾都行，不需要担心第三方平台的审核，限制。

#+begin_quote
...我学会了没有什么比与一个真实的、活生生的人交谈更重要，尤其是那些就在街边的人。
#+end_quote

** [[https://web.archive.org/web/20180224075941/http://this-page-intentionally-left-blank.org/whythat.html][The "This Page Intentionally Left Blank" Project]]

网上冲浪看到 [[https://blakewatson.com/][Blake Watson]] 的博客，下面有一个 Blank Page 链接，好奇点开看，是一个空白页面，上面有一句话：

"This page intentionally left blank."

然后点开了页面链接，就看到了这个 [[https://web.archive.org/web/20180224075941/http://this-page-intentionally-left-blank.org/whythat.html][The "This Page Intentionally Left Blank" Project]] 。

#+begin_quote
以前的印刷手册会有一些空白页，通常会注明 "此页故意留空"。在大多数情况下，这是有技术原因的。

...试图将这些空白页再次引入网络。

原因之一是为了让人们记住这些著名的历史空白页。

但最主要的原因还是为了在拥挤不堪的万维网上为网络漫游者提供一个安静和简洁的空间⸺让浮躁的心灵得到放松的空白页。
#+end_quote

我也跟着做了一个 [[https://taxodium.ink/_blank][_blank]] 页面。

文章里还提到了 [[https://www.w3.org/Provider/Style/URI][Cool URIs don't change]]，之前我调整了博客的发布（见[[https://taxodium.ink/org-publish-blog][使用 org-publish 发布博客]]），URI 我也换了，从 =/post/index.html= 变成了 =/index.html= 。

看来我是一点都不 Cool 呀 ╮(╯▽╰)╭ 不过以后还是要保证 URI 不变，除非没钱续费域名了。∠( ᐛ 」∠)＿

在搜索 blank page 相关的内容的时候，还发现有人注册了 [[https://blank.page/][blank.page]] 域名，做成了一个网页笔记。

** [[https://webdirections.org/blog/on-the-web-and-optimism/][On the web, and optimism]]

#+begin_quote
几年前，我记得我在天知道什么地方写过一篇文章，说网络的出现恰恰是我们需要的时候，几乎是奇迹般地出现了。

就在我们作为一个物种和一个星球面临全球性生存挑战的时候，一种将我们连接到全球的方式出现了。
#+end_quote

#+begin_quote
网络有别于其他技术；对我来说，它天生就更有趣。

硅谷（包括风险投资生态系统）起源于国防技术。

相比之下，网络是为学术学习和相互发现服务而创建的，两者都是本着免费开放的精神建立和共享的。

Tim Berners-Lee、Robert Cailliau 和欧洲核子研究中心 (CERN) 建立了一个原型并将其免费开放，这是一件了不起的事情。

[[https://home.cern/science/computing/birth-web/short-history-web][欧洲核子研究中心在其关于网络历史的网页上指出]]：

*一个重要的观点是，网络应保持开放标准，供所有人使用，任何人都不应将其锁定为专有系统。*

这种精神是它成功的原因，也是网络改变世界的原因。

这也是为什么像我这样的人--在苏格兰，没有任何关系网、财富或特权可言--能够闯入并建立起吸引人们注意力的东西。

这也是我一开始对互联网感兴趣的原因。

我常说：“互联网就是人”；网络不仅仅是协议和管道，更是我们共同构建的互联结构。

甚至在一开始，有些人看到网络就想，"这是我能赚大钱的一种方式"。

对我来说，这始终是一种大规模建立社区的方式。
#+end_quote
** [[https://www.johndcook.com/blog/2024/10/13/why-does-fm-sound-better-than-am/][Why does FM sound better than AM?]]

以前听收音机，上面会有 AM 和 FM，大部分时间听的都是 FM，AM 听过，但发现噪音往往比 FM 更多，而且频道好像比较少。

#+begin_quote
阿姆斯特朗认为，随机噪声的作用主要是对载波进行振幅调制，而不会持续产生频率衍射。
#+end_quote

AM 是调幅，FM 是调频，由于噪声主要是对振幅产生影响，FM 传递信息靠的是频率而不是振幅，所以收到噪声的影响更小。


* Tutorial

** [[https://joaquimrocha.com/2024/09/22/how-to-fork/][How to fork: Best practices and guide]]

关于如何维护好 fork 的仓库的一些实践和指南。

- Use atomic commits :: 提交只包含一个改动，颗粒度小，就容易维护。
- Identify your fixes and non-fixes :: commit message 中区分 fix 和其他修改，fix 的可能是需要合并到上游的，如果不区分到时不好找。
- No evil merges :: merge 不要包含其他变更，只是单纯的 merge
- Rebase early, rebase often :: 及时和上游合并代码，进行 rebase，保持进度，到时需要 merge 就不会落后太多
- Contribute changes back :: 将改动提交到上游，这样这部分代码就有其他人维护了，而不仅是自己
- Keep a good relationship with upstream :: 符合上游的规范，建立和上游的信任，这样才能促进积极合作

** [[https://uadesignsystem.com/][The Ultinamte E-book for Crafting Design Systems]]

一本关于设计的电子书，完整书籍需要付费购买。

** [[https://browser.engineering/index.html][Web Browser Engineering]]

#+begin_quote
网络浏览器无处不在，但它们是如何工作的？

本书解释了如何用几千行 Python 构建一个基本但完整的网络浏览器，从网络连接到 JavaScript。
#+end_quote

** [[https://react.dev/learn/thinking-in-react][Thinking in React]]

React 这篇关于如何编写页面的思考方式一读再读。

有时写组件的时候欠缺一些思考就上手实现了，尽管实现了，但是拆分得可能没那么好，不利于后续的扩展。

按照 React 的这个思考方式来应该能避免动手太快，思考太短，从而让最终的实现更健壮一些。

** [[https://htmlforpeople.com/][HTML is for people]]

[[https://taxodium.ink/12][Weekly#12]] 中读了 [[https://kristoff.it/blog/static-site-paradox/][The Static Site Paradox]] 提倡让网页开发简单，这样非专业人士也能参与。

而这篇文章的作者，则写了一个教程，教非专业的人如何搭建一个个人博客。

整体还是比较容易的，即使没有学过编程，应该也能轻松完成教程。

* Code

* Cool Bit

** [[https://how-i-experience-web-today.com/][How I Experience Web Today]]

作者模拟现在网页的一些烦人的操作，点了四五步我已经不想继续点了。(╯°□°）╯︵ ┻━┻ ([[https://news.ycombinator.com/item?id=41859047][Hacker News Comments]])

** [[https://mattferraro.dev/posts/caustics-engineering][Hiding Images in Plain Sight: The Physics Of Magic Windows]]

作者在一块透明玻璃上刻了纹路，光线透过会看到一幅图画。

里面的数学知识好多，看不太明白，但是看作者一步步解决问题的过程，也很 cool，这样的记录也值得学习。

** [[https://busy.bar/?hn][Busy Status Bar]]

想法很不错的产品，一个可以放在显示器上的状态栏，告诉别人你在忙，或者在通话，请不要打扰。

#+begin_quote
但遗憾的是，根据我的经验，在办公室里经常打断你说话的人，会忽略所有明确的信号。

佩戴降噪耳机是“正在工作，请勿打扰”的公认标志，但有些人却觉得这不适用于他们。

或者他们只是站在你的办公桌旁边等待你的注意。

[[https://news.ycombinator.com/item?id=41838337][Source]]
#+end_quote

** [[https://github.com/arturbien/balloons-js][balloons-js]]

在页面上升起气球。

** [[https://emoji.build/deal-with-it-generator/][Deal With It]]

上传一个人物图片，生成带墨镜的 GIF 图。

* Tool | Library

** [[https://www.explainshell.com/][explainshell.com]]

一个可以解释 shell 命令的网站，对于学习 shell 命令应该会挺有帮助。

** [[https://www.dobrowser.io/][dobrowser]]

通过 prompt 指导浏览器帮你完成一些任务。Chrome 本身自带 Gemini，或许以后 Chrome 能自带这个功能？

** [[https://mermaid-ascii.art/][Mermaid ASCII]]

可以将 [[https://mermaid.js.org/][Mermaid]] 转换成 ASCII，不过支持的类型不是很多，像 Sequence diagrams 目前还不支持。

** [[https://once.com/writebook][Writebook]]

#+begin_quote
博客和社交媒体发帖很简单。

但为什么在网上出版一本完整的书却如此困难？现在不再是这样了。

Writebook 是一款非常简单的软件，允许您以简单、可浏览的在线书籍格式发布文本和图片。
#+end_quote

** [[https://gamma.app/][Gamma]]

#+begin_quote
A new medium for presenting ideas. Powered by AI.

Beautiful presentations, documents, and websites. No design or coding skills required.
#+end_quote
** [[https://kaomoji.ai/zh][颜文字 (✪ω✪)]]

AI 生成颜文字。

想着如果能在 Emacs 中方便输入颜文字就好了，没想到真有人做了: [[https://github.com/kuanyui/kaomoji.el][Kaomoji.el]]。 σ ﾟ∀ ﾟ) ﾟ∀ﾟ)σ

** [[https://hitokoto.cn/][一言]]

提供 API 获取随机的句子。

** [[https://picsum.photos/][picsum.photos]]

提供接口获取随机图片。


* Music
