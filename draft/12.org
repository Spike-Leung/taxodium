#+title: Weekly#12
#+INDEX: weekly!#12
#+date: <2024-10-10 Thu>
#+lastmod: <2024-10-10 Thu 20:45>
#+author: Spike Leung
#+email: l-yanlei@hotmail.com
#+description: ""
#+tags: weekly

#+begin_src html
  <style>
    ol {
  all: unset;
  display: grid;
  grid-template-columns: repeat(34, 1fr);
  grid-template-rows: repeat(21, 1fr);
  list-style: none;

  li {
    aspect-ratio: 1 / 1;
    background: var(--bg);
    grid-area: var(--ga);
    overflow: hidden;
    position: relative;

    &::after {
      aspect-ratio: 1 / 1;
      background-color: rgba(255, 255, 255, .3);
      border-radius: 50%;
      content: '';
      display: block;
      inset: 0;
      position: absolute;
      scale: 2;
      translate: var(--tl);
    }

    &:nth-of-type(1) {
      --bg: #e47a2c;
      --ga: 1 / 1 / 22 / 22;
      --tl: 50% 50%;
    }
    &:nth-of-type(2) {
      --bg: #baccc0 ;
      --ga: 1 / 22 / 23 / 35;
      --tl: -50% 50%;
    }
    &:nth-of-type(3) {
      --bg: #6c958f;
      --ga: 14 / 27 / 22 / 35;
      --tl: -50% -50%;
    }
    &:nth-of-type(4) {
      --bg: #40363f;
      --ga: 17 / 22 / 22 / 27;
      --tl: 50% -50%;
    }
    &:nth-of-type(5) {
      --bg: #d7a26c;
      --ga: 14 / 22 / 17 / 25;
      --tl: 50% 50%;
    }
    &:nth-of-type(6) {
      --bg: #ae4935;
      --ga: 14 / 25 / 17 / 27;
      --tl: -50% 50%;
    }
    &:nth-of-type(7) {
      --bg: #e47a2c;
      --ga: 16 / 26 / 17 / 27;
      --tl: -50% -50%;
    }
    &:nth-of-type(8) {
      --bg: #f7e6d4;
      --ga: 16 / 25 / 17 / 26;
      --tl: 50% -50%;
    }
  }
}
    <style>
  <ol>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
  </ol>
#+end_src
#+begin_export html
<iframe style="width:100%" srcdoc=" &lt;style&gt; ol { all: unset; display: grid; grid-template-columns: repeat(34, 1fr); grid-template-rows: repeat(21, 1fr); list-style: none; li { aspect-ratio: 1 / 1; background: var(--bg); grid-area: var(--ga); overflow: hidden; position: relative; &amp;::after { aspect-ratio: 1 / 1; background-color: rgba(255, 255, 255, .3); border-radius: 50%; content: &#39;&#39;; display: block; inset: 0; position: absolute; scale: 2; translate: var(--tl); } &amp;:nth-of-type(1) { --bg: #e47a2c; --ga: 1 / 1 / 22 / 22; --tl: 50% 50%; } &amp;:nth-of-type(2) { --bg: #baccc0 ; --ga: 1 / 22 / 23 / 35; --tl: -50% 50%; } &amp;:nth-of-type(3) { --bg: #6c958f; --ga: 14 / 27 / 22 / 35; --tl: -50% -50%; } &amp;:nth-of-type(4) { --bg: #40363f; --ga: 17 / 22 / 22 / 27; --tl: 50% -50%; } &amp;:nth-of-type(5) { --bg: #d7a26c; --ga: 14 / 22 / 17 / 25; --tl: 50% 50%; } &amp;:nth-of-type(6) { --bg: #ae4935; --ga: 14 / 25 / 17 / 27; --tl: -50% 50%; } &amp;:nth-of-type(7) { --bg: #e47a2c; --ga: 16 / 26 / 17 / 27; --tl: -50% -50%; } &amp;:nth-of-type(8) { --bg: #f7e6d4; --ga: 16 / 25 / 17 / 26; --tl: 50% -50%; } } } &lt;style&gt; &lt;ol&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ol&gt; "></iframe>
#+end_export

* News | Article

** [[https://rxjourney.com.ng/all-we-really-have-in-this-world-is-ourselves][All We Really Have in This World Is Ourselves]]

#+begin_quote
但问题是：到了下午 4 点，我就会脱下大衣，告诉他们我要回家了。

只有当我正在进行一场精彩的谈话或享受同事们的陪伴时，我才会在下午 4 点之后继续工作。

我不会为了做更多的工作而加班，因为最终，没有我，工作也会继续。

我的同事会向我的家人表示慰问，并在社交媒体上发表对我的赞美之词，但很快，他们就会一切照旧。

我不会在没有报酬的情况下自杀式地加班。

生活是残酷的。生活是悲伤的。生活是孤独的。

有时，在家里，我只是想哭。
#+end_quote

看着作者的文字，觉得有些悲伤。

前阵子还看到一个帖子:  [[https://v2ex.com/t/1078509][父母不在了，是不是就四海为家了？]]，也是让人感到孤独和悲伤。

** [[https://zverok.space/blog/2024-10-06-poetry.html][On programming and poetry (not Python’s tool)]]

#+begin_quote
我们为什么要写作和阅读文学作品，任何文学作品？

主要是为了分享经历。一种去某个地方、经历某些事件、感受某些情绪、理解某些事情的体验。这种体验我们可能无法直接获取。

在这个定义的范围内，诗歌，一言以蔽之，是一种更有效地分享难以理性表达的经验的方式。

它依赖于某种理解上的“飞跃”，在这种情况下，一个精心制作的短语与五页密集的解释一样有效。
#+end_quote

#+begin_quote
we can say that writing code is sharing the experience of understanding the requirements/implementation.

我们可以说，编写代码就是分享理解需求/实现的经验。
#+end_quote

#+begin_quote
我希望看到更多的人以对待文学作品的心态来对待短语和“段落”（方法或语句组）层面上的代码。

我指的是一种视角，从这种视角出发，我们可以分析、讨论（也许还可以自学），从对潜在读者（包括人类和编译器/解释器）的影响的角度来思考

“在这种情况下，表达的含义是如何传达代码背后的思想的；是否可以用不同的方式来表达，以强调不同的方面”。

这种对话不像自动格式化和风格指南那么死板，也比抽象的“可读性”或“智能/简单代码”更加细致入微。
#+end_quote

** [[https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/][An Illustrated Proof of the CAP Theorem]]

CAP 定理的图解证明，比较容易懂。

** [[https://www.dreamsongs.com/RiseOfWorseIsBetter.html][The Rise of Worse is Better]]

#+begin_quote
从中可以学到的教训是，首先追求正确的事情往往是不理想的。

获取一半可用的正确事物更好，这样它就像病毒一样传播。

一旦人们对它上瘾，就花时间将其改进到 90% 的正确程度。
#+end_quote

* Tutorial

** [[https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl][OKLCH in CSS: why we moved from RGB and HSL]]

一篇关于 [[https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch][oklch()]] 的文章，对于为什么用，怎么用解释的很详细，也对比了和其他语法的差别。

#+begin_quote
=H= is the hue angle.

It goes from 0 to 360, through red 20, yellow 90, green 140, blue 220, purple 320 and then back to red.

You can use Roy G. Biv mnemonic by giving around 50° to each letter.
#+end_quote

其中关于如何记住色轮的值，作者提到了 [[https://www.wikiwand.com/en/articles/ROYGBIV][ROYGBIV]] 的方法，觉得还不错。

我觉得 "*R* ead  *O* ut  *Y* our  *G* ood  *B* ook  *I* n  *V* erse" 这句话还比较容易记忆。


** [[https://beej.us/guide/bgc/][Beej's Guide to C Programming]]

C 语言教程。

* Code

* Cool Bit

** [[https://dev.to/madsstoumann/the-golden-ratio-in-css-53d0][The Golden Ratio in CSS]]

CSS 绘制黄金比例。

* Tool | Library

** [[https://chromewebstore.google.com/detail/aria-devtools/dneemiigcbbgbdjlcdjjnianlikimpck][ARIA DevTools]]

检查页面 ARIA(Accessible Rich Internet Applications) 的 Chrome 插件。

** [[https://chromewebstore.google.com/detail/kimi-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8A%A9%E6%89%8B/caejcfciegnnnepdhaopdogngbmojodl][Kimi 浏览器助手]]

Chrome 插件，可以集成 Kimi，选择内容询问。

** [[https://zeli.app/zh][zeli]]

HackerNews AI 版，会翻译标题，以及对文章内容做摘要。

可以看看作者的帖子： [[https://v2ex.com/t/1078143][因为每天都会读 Hacker News 和 AI 论文，我做了一个工具]]。

** [[https://search.luxirty.com/][Luxirty Search]]

#+begin_quote
一个搜索引擎，基于 Google，屏蔽内容农场，无广告，无跟踪，干净，简洁，快。
#+end_quote

** [[https://json4u.cn/][JSON For You]]

一个 JSON 可视化工具，常见的格式化和比较也支持。

* Music
